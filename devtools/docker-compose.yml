version: '3.7'

services:
  web:
    build:
      context: ..
      dockerfile: ./devtools/Dockerfile
    environment: 
      - DEBUG=${DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    ports: 
      - 8000:8000
    command: python manage.py runserver 0.0.0.0:8000
    restart: "on-failure"
    volumes:
      - ..:/app
    depends_on: 
      - migration
  db:
    image: postgres:11-alpine
    ports:      
      - 5432:5432
    environment: 
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGPORT=${PGPORT}
      - POSTGRES_USER=${POSTGRES_USER}
    restart: "on-failure"

  migration:
    build:
      context: ..
      dockerfile: ./devtools/Dockerfile
    environment: 
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    command: python manage.py migrate --noinput
    restart: "on-failure"
    volumes:
      - ..:/app
    depends_on:
      - db
 